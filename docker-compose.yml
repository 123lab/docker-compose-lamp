version: "2"

services:
    mysql:
        image: mariadb:10.0
        ulimits:
            nproc: 65535
            nofile:
                soft: 20000
                hard: 40000
        volumes:
            - ./docker-runtime/mysql/lib:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_USER: root
            MYSQL_PASSWORD: root
            MYSQL_DATABASE: testdrive
        #command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci # The simple way to override the mariadb config.
        networks:
            - internal

    php-fpm:
# Pls, check image tags, latest is php-7, but we have php-5 too.
        image: lordius/alpine-php_fpm
#        image: lordius/alpine-php_fpm:php-5
#        image: lordius/alpine-php_fpm:php-7
        depends_on:
            - mysql
#            - selenium
        volumes:
            - ./htdocs:/var/www/localhost/htdocs
            - ./crontasks.txt:/home/crontasks.txt
        environment:
            CRONTAB_ENABLED: 0
            PHP_FPM_PORT: 7000
            PHP_SENDMAIL_PATH: /usr/sbin/sendmail -i -t
            PHP_SENDMAIL_HOST: mailhog
            PHP_SENDMAIL_PORT: 1025
            PHP_XDEBUG_ENABLED: 1
            PHP_XDEBUG_PORT: 8010
            PHP_MAX_EXECUTION_TIME: 250
            PHP_UPLOAD_MAX_FILESIZE: 1024M
            PHP_POST_MAX_SIZE: 756M
            PHP_ALLOW_URL_FOPEN: "On"
            PHP_ALWAYS_POPULATE_RAW_POST_DATA: -1
            PHP_MEMORY_LIMIT: 1024M
        networks:
            - internal
        extra_hosts:
            - "site.dockerlamp:172.55.0.3" 

    apache2_mpm:
        image: lordius/alpine-apache
        depends_on:
            - php-fpm
        volumes_from:
            - php-fpm
        environment:
            PROXY_PASS: fcgi://php-fpm:7000/var/www/localhost/htdocs
            APACHE_LISTEN_PORT: 80
        networks:
            - internal


    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        depends_on:
            - mysql
        environment:
            PMA_HOST: mysql
            PHP_UPLOAD_MAX_FILESIZE: 1G
            PHP_MAX_INPUT_VARS: 1G
        networks:
            internal:
            shared:
                ipv4_address: 172.55.0.2
    nginx:
        image: lordius/alpine-nginx
        depends_on:
            - apache2_mpm
        volumes_from:
            - php-fpm
        environment:
            KEEPALIVE_TIMEOUT: 3000
            LISTEN_PORT: 80
            SERVER_ROOT: /var/www/localhost/htdocs
            SERVER_NAME: localhost
            CLIENT_MAX_BODY_SIZE: 32m
            PROXY_CONNECT_TIMEOUT: 3000
            PROXY_SEND_TIMEOUT: 3000
            PROXY_READ_TIMEOUT: 3000
            SEND_TIMEOUT: 3000
            PROXY_PASS: http://apache2_mpm:80
        networks:
          internal:
          shared:
              ipv4_address: 172.55.0.3

    mailhog:
        image: lordius/alpine-mailhog
        depends_on:
            - php-fpm
        networks:
          internal:
          shared:
             ipv4_address: 172.55.0.4

    ngrok:
        image: lordius/alpine-ngrok
        environment:
            ARGS: http 172.53.0.4:80
        networks:
            shared:
                ipv4_address: 172.55.0.5

#    php-fpm-data:
#        image: lordius/alpine-php_fpm
#        networks:
#          - internal
#
#    selenium:
#        image: selenium/standalone-firefox-debug:2.48.2
#        links:
#            - php-fpm
#        ports:
#            - "4444"
#            - "5900"
#        cap_add:
#            - NET_ADMIN
#            - NET_RAW
#        networks:
#            shared:
#                ipv4_address: 172.55.0.6

##Node example, based on node express.
#    node:
#        image: node:8.4.0-alpine
#        environment:
#        - NODE_ENV=production
#        volumes:
#            - ./htdocs:/usr/src/app
#        working_dir: /usr/src/app
#        expose:
#        - "3000"
#        command: ash -c "PORT=3000 DEBUG=htdocs:* npm start"
#        networks:
#            internal:
#            shared:
#                ipv4_address: 172.55.0.7
#    mongo:
#        image: mongo
#        volumes:
#          - ./docker-runtime/mongo:/var/lib/mongodb
#        restart: always
#        ports:
#            - 27017:27017
#        command: mongod --smallfiles --logpath=/dev/null # --quiet
#        networks:
#            - internal

networks:
  internal:
    driver_opts:
      internal: "true"
    driver: bridge      
  shared:
    driver_opts:
      enable_ipv6: "true"
    driver: bridge
    ipam:
     config:
       - subnet: 172.55.0.0/16
         gateway: 172.55.0.1
